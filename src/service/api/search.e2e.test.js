"use strict";

const express = require(`express`);
const request = require(`supertest`);

const search = require(`./search`);
const DataService = require(`../data-services/search`);

const {HttpCode} = require(`../../const`);

const mockData = [
  {
    id: `amoewo`,
    comments: [
      {
        id: `a-MgY9`,
        text: `Планируете записать видосик на эту тему? Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`,
      },
      {
        id: `EGyGvD`,
        text: `Мне кажется или я уже читал это где-то? Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`,
      },
      {
        id: `AC6eBO`,
        text: `Согласен с автором! Совсем немного... Это где ж такие красоты Планируете записать видосик на эту тему? Хочу такую же футболку :-)`,
      },
      {
        id: `r3_aCD`,
        text: `Планируете записать видосик на эту тему? Согласен с автором!`,
      },
    ],
    title: `Рок — это протест`,
    announce:
      `Помните небольшое количество ежедневных упражнений лучше чем один раз но много. Золотое сечение — соотношение двух величин гармоническая пропорция. Достичь успеха помогут ежедневные повторения. Он написал больше 30 хитов.`,
    fullText:
      `Из под его пера вышло 8 платиновых альбомов. Это один из лучших рок-музыкантов. Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами. Золотое сечение — соотношение двух величин гармоническая пропорция.`,
    createdDate: `9 сентября 2021 г., 15:51`,
    category: [`Железо`],
  },
  {
    id: `C6XzOU`,
    comments: [
      {
        id: `Rek0MS`,
        text: `Это где ж такие красоты Мне кажется или я уже читал это где-то?`,
      },
      {
        id: `kkqkh1`,
        text: `Планируете записать видосик на эту тему? Плюсую, но слишком много буквы! Согласен с автором! Это где ж такие красоты Совсем немного...`,
      },
    ],
    title: `Ёлки. История деревьев`,
    announce:
      `Помните небольшое количество ежедневных упражнений лучше чем один раз но много. Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле? Как начать действовать? Для начала просто соберитесь. Простые ежедневные упражнения помогут достичь успеха.`,
    fullText:
      `Как начать действовать? Для начала просто соберитесь. Из под его пера вышло 8 платиновых альбомов. Ёлки — это не просто красивое дерево. Это прочная древесина. Этот смартфон — настоящая находка. Большой и яркий экран мощнейший процессор — всё это в небольшом гаджете.`,
    createdDate: `13 октября 2021 г., 15:51`,
    category: [`Без рамки`],
  },
  {
    id: `16oy-T`,
    comments: [
      {id: `RQLWgv`, text: `Совсем немного...`},
      {
        id: `W8h9WZ`,
        text: `Хочу такую же футболку :-) Мне не нравится ваш стиль. Ощущение, что вы меня поучаете. Совсем немного... Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`,
      },
    ],
    title: `Самый лучший музыкальный альбом этого года`,
    announce:
      `Простые ежедневные упражнения помогут достичь успеха. Достичь успеха помогут ежедневные повторения. Золотое сечение — соотношение двух величин гармоническая пропорция. Из под его пера вышло 8 платиновых альбомов.`,
    fullText:
      `Ёлки — это не просто красивое дерево. Это прочная древесина. Из под его пера вышло 8 платиновых альбомов. Игры и программирование разные вещи. Не стоит идти в программисты если вам нравятся только игры. Программировать не настолько сложно как об этом говорят.`,
    createdDate: `19 августа 2021 г., 15:51`,
    category: [`Без рамки`],
  },
];

const app = express();
app.use(express.json());
search(app, new DataService(mockData));

describe(`API returns article based on search query`, () => {

  let response;

  beforeEach(async () => {
    response = await request(app)
      .get(`/search`)
      .query({
        query: `Рок — это протест`
      });
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));

  test(`1 offer found`, () => expect(response.body.length).toBe(1));

  test(`offer has correct id`, () => expect(response.body[0].id).toBe(`amoewo`));
});

test(`API returns code 404 if nothing is found`, () => {
  request(app).get(`/search`)
    .query({
      query: `Not exist`
    })
    .expect(HttpCode.NOT_FOUND);
});

test(`API returns 400 when query string is absent`, () => {
  request(app).get(`/search`)
    .expect(HttpCode.BAD_REQUEST);
});
